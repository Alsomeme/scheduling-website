import React, { useState } from 'react';
import { Calendar, Clock, UserPlus, RefreshCw, Bell } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';

const ScheduleManager = () => {
  const [userRole, setUserRole] = useState('employer');
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [notifications, setNotifications] = useState([
    { id: 1, message: 'John requested to swap shift with Sarah on Monday' },
    { id: 2, message: 'New schedule published for next week' }
  ]);

  const [schedules] = useState([
    { id: 1, employee: 'John Doe', date: '2025-01-29', shift: 'Morning (8AM-4PM)' },
    { id: 2, employee: 'Sarah Smith', date: '2025-01-29', shift: 'Evening (4PM-12AM)' },
    { id: 3, employee: 'Mike Johnson', date: '2025-01-30', shift: 'Morning (8AM-4PM)' }
  ]);

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center">
          <div className="flex items-center space-x-4">
            <Calendar className="h-8 w-8 text-blue-600" />
            <h1 className="text-2xl font-bold text-gray-900">Schedule Manager</h1>
          </div>
          <div className="flex items-center space-x-4">
            <button
              onClick={() => setUserRole(userRole === 'employer' ? 'employee' : 'employer')}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
            >
              Switch to {userRole === 'employer' ? 'Employee' : 'Employer'} View
            </button>
            <div className="relative">
              <Bell className="h-6 w-6 text-gray-600 cursor-pointer" />
              <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-4 w-4 flex items-center justify-center">
                {notifications.length}
              </span>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Calendar Section */}
          <Card className="lg:col-span-2">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Calendar className="h-5 w-5" />
                <span>Schedule Calendar</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-7 gap-2 mb-4">
                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (
                  <div key={day} className="text-center font-semibold text-gray-600">
                    {day}
                  </div>
                ))}
              </div>
              <div className="grid grid-cols-7 gap-2">
                {Array.from({ length: 35 }, (_, i) => (
                  <div
                    key={i}
                    className="aspect-square border rounded-md p-2 text-sm hover:bg-gray-50 cursor-pointer"
                  >
                    <div className="font-medium">{((i % 31) + 1)}</div>
                    {schedules.some(s => s.date === '2025-01-' + ((i % 31) + 1)) && (
                      <div className="mt-1 text-xs bg-blue-100 text-blue-800 rounded px-1">
                        Shifts
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Quick Actions */}
            <Card>
              <CardHeader>
                <CardTitle>Quick Actions</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {userRole === 'employer' ? (
                    <>
                      <button className="w-full flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                        <UserPlus className="h-5 w-5" />
                        <span>Assign New Shift</span>
                      </button>
                      <button className="w-full flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50">
                        <Clock className="h-5 w-5" />
                        <span>View All Schedules</span>
                      </button>
                    </>
                  ) : (
                    <>
                      <button className="w-full flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                        <RefreshCw className="h-5 w-5" />
                        <span>Request Shift Swap</span>
                      </button>
                      <button className="w-full flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50">
                        <Clock className="h-5 w-5" />
                        <span>View My Schedule</span>
                      </button>
                    </>
                  )}
                </div>
              </CardContent>
            </Card>

            {/* Notifications */}
            <Card>
              <CardHeader>
                <CardTitle>Recent Notifications</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {notifications.map(notification => (
                    <Alert key={notification.id}>
                      <AlertDescription>
                        {notification.message}
                      </AlertDescription>
                    </Alert>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
    </div>
  );
};

export default ScheduleManager;
